
@using BlogSystem.DTO;
@model BlogSystem.MVCSite.Models.ArticleViewModels.EditArticleViewModel

@{
    
    ViewBag.Title = "EditArticle";

}

<h2>EditArticle</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>EditArticleViewModel</h4>
    <hr />
    @*@Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model=>model.ID);
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        文章分类
        <div class="col-md-10">
            <ul>
                @foreach (var item in ViewBag.Categories)
                {
                    <li>
                        <input type="checkbox" name="CategoryIds" value="@item.Id" @(Model.CategoryIds.Contains((item as BlogCategoryDto).Id) ? "checked" : "") />@item.CategoryName
                    </li>
                }
            </ul>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ListArticle")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
